<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

<context:component-scan base-package="com.gdit.crud">
<!--不扫描控制器-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
<!-- spring配置文件，主要配置和业务逻辑相关的-->
<!--数据源，事务控制，XXX-->

<!--数据源-->
    <context:property-placeholder location="classpath:dbConfig.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>



<!--配置和mybatis整合-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--mybatis文件位置-->
        <property name="configLocation" value="classpath:Mybatis-cof.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
<!--指定mapper文件位置-->
        <property name="mapperLocations" value="classpath:mapper/xml/*.xml"></property>
    </bean>

<!--配置扫描器，将mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--扫描所有dao接口，加入到ioc容器-->
        <property name="basePackage" value="com.gdit.crud.dao"></property>
    </bean>

<!--配置一个可以批量的SqlSession-->
    <bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sessionFactory"/>
        <constructor-arg name="executorType" value="SIMPLE"/>
    </bean>

<!--事务控制-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--控制住数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--开启基于注解的事务，使用xml配置形式的事务（比较重要的都使用配置形式）-->
<aop:config>
<!--service包下的所有类以及子包的所有类,参数不限-->
<!--切入点表达式-->
    <aop:pointcut id="txPoint" expression="execution(* com.gdit.crud.service..*(..))"/>
<!--配置事务增强-->
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
</aop:config>
<!--配置事务增强，事务如何切入-->
   <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
   <tx:attributes>
<!--所有方法都是事务方法-->
       <tx:method name="*"/>
<!--以get开头的所有方法-->
       <tx:method name="get*" read-only="true"/>
   </tx:attributes>
   </tx:advice>
<!--spring配置文件核心点（数据源，与mybatis整合，事务控制）-->
</beans>